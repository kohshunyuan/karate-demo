/*
 * This file is generated by jOOQ.
 */
package com.tvlk.karate.db;


import com.tvlk.karate.db.tables.AvailablePaymentOption;
import com.tvlk.karate.db.tables.Order;
import com.tvlk.karate.db.tables.records.AvailablePaymentOptionRecord;
import com.tvlk.karate.db.tables.records.OrderRecord;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>karate</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AvailablePaymentOptionRecord, Integer> IDENTITY_AVAILABLE_PAYMENT_OPTION = Identities0.IDENTITY_AVAILABLE_PAYMENT_OPTION;
    public static final Identity<OrderRecord, Integer> IDENTITY_ORDER = Identities0.IDENTITY_ORDER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AvailablePaymentOptionRecord> AVAILABLE_PAYMENT_OPTION_PKEY = UniqueKeys0.AVAILABLE_PAYMENT_OPTION_PKEY;
    public static final UniqueKey<OrderRecord> ORDER_PKEY = UniqueKeys0.ORDER_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AvailablePaymentOptionRecord, Integer> IDENTITY_AVAILABLE_PAYMENT_OPTION = Internal.createIdentity(AvailablePaymentOption.AVAILABLE_PAYMENT_OPTION, AvailablePaymentOption.AVAILABLE_PAYMENT_OPTION.ID);
        public static Identity<OrderRecord, Integer> IDENTITY_ORDER = Internal.createIdentity(Order.ORDER, Order.ORDER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AvailablePaymentOptionRecord> AVAILABLE_PAYMENT_OPTION_PKEY = Internal.createUniqueKey(AvailablePaymentOption.AVAILABLE_PAYMENT_OPTION, "available_payment_option_pkey", AvailablePaymentOption.AVAILABLE_PAYMENT_OPTION.ID);
        public static final UniqueKey<OrderRecord> ORDER_PKEY = Internal.createUniqueKey(Order.ORDER, "order_pkey", Order.ORDER.ID);
    }
}
