/*
 * This file is generated by jOOQ.
 */
package com.tvlk.karate.db.tables.daos;


import com.tvlk.karate.db.enums.PaymentOption;
import com.tvlk.karate.db.tables.AvailablePaymentOption;
import com.tvlk.karate.db.tables.records.AvailablePaymentOptionRecord;

import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AvailablePaymentOptionDao extends DAOImpl<AvailablePaymentOptionRecord, com.tvlk.karate.db.tables.pojos.AvailablePaymentOption, Integer> {

    /**
     * Create a new AvailablePaymentOptionDao without any configuration
     */
    public AvailablePaymentOptionDao() {
        super(AvailablePaymentOption.AVAILABLE_PAYMENT_OPTION, com.tvlk.karate.db.tables.pojos.AvailablePaymentOption.class);
    }

    /**
     * Create a new AvailablePaymentOptionDao with an attached configuration
     */
    public AvailablePaymentOptionDao(Configuration configuration) {
        super(AvailablePaymentOption.AVAILABLE_PAYMENT_OPTION, com.tvlk.karate.db.tables.pojos.AvailablePaymentOption.class, configuration);
    }

    @Override
    public Integer getId(com.tvlk.karate.db.tables.pojos.AvailablePaymentOption object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.tvlk.karate.db.tables.pojos.AvailablePaymentOption> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(AvailablePaymentOption.AVAILABLE_PAYMENT_OPTION.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.tvlk.karate.db.tables.pojos.AvailablePaymentOption> fetchById(Integer... values) {
        return fetch(AvailablePaymentOption.AVAILABLE_PAYMENT_OPTION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.tvlk.karate.db.tables.pojos.AvailablePaymentOption fetchOneById(Integer value) {
        return fetchOne(AvailablePaymentOption.AVAILABLE_PAYMENT_OPTION.ID, value);
    }

    /**
     * Fetch records that have <code>payment_option BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.tvlk.karate.db.tables.pojos.AvailablePaymentOption> fetchRangeOfPaymentOption(PaymentOption lowerInclusive, PaymentOption upperInclusive) {
        return fetchRange(AvailablePaymentOption.AVAILABLE_PAYMENT_OPTION.PAYMENT_OPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_option IN (values)</code>
     */
    public List<com.tvlk.karate.db.tables.pojos.AvailablePaymentOption> fetchByPaymentOption(PaymentOption... values) {
        return fetch(AvailablePaymentOption.AVAILABLE_PAYMENT_OPTION.PAYMENT_OPTION, values);
    }

    /**
     * Fetch records that have <code>active BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.tvlk.karate.db.tables.pojos.AvailablePaymentOption> fetchRangeOfActive(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(AvailablePaymentOption.AVAILABLE_PAYMENT_OPTION.ACTIVE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>active IN (values)</code>
     */
    public List<com.tvlk.karate.db.tables.pojos.AvailablePaymentOption> fetchByActive(Boolean... values) {
        return fetch(AvailablePaymentOption.AVAILABLE_PAYMENT_OPTION.ACTIVE, values);
    }
}
