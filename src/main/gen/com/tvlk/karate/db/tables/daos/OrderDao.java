/*
 * This file is generated by jOOQ.
 */
package com.tvlk.karate.db.tables.daos;


import com.tvlk.karate.db.enums.PaymentOption;
import com.tvlk.karate.db.enums.PaymentStatus;
import com.tvlk.karate.db.enums.ProductType;
import com.tvlk.karate.db.tables.Order;
import com.tvlk.karate.db.tables.records.OrderRecord;

import java.time.OffsetDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class OrderDao extends DAOImpl<OrderRecord, com.tvlk.karate.db.tables.pojos.Order, Integer> {

    /**
     * Create a new OrderDao without any configuration
     */
    public OrderDao() {
        super(Order.ORDER, com.tvlk.karate.db.tables.pojos.Order.class);
    }

    /**
     * Create a new OrderDao with an attached configuration
     */
    @Autowired
    public OrderDao(Configuration configuration) {
        super(Order.ORDER, com.tvlk.karate.db.tables.pojos.Order.class, configuration);
    }

    @Override
    public Integer getId(com.tvlk.karate.db.tables.pojos.Order object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.tvlk.karate.db.tables.pojos.Order> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Order.ORDER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.tvlk.karate.db.tables.pojos.Order> fetchById(Integer... values) {
        return fetch(Order.ORDER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.tvlk.karate.db.tables.pojos.Order fetchOneById(Integer value) {
        return fetchOne(Order.ORDER.ID, value);
    }

    /**
     * Fetch records that have <code>product_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.tvlk.karate.db.tables.pojos.Order> fetchRangeOfProductType(ProductType lowerInclusive, ProductType upperInclusive) {
        return fetchRange(Order.ORDER.PRODUCT_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>product_type IN (values)</code>
     */
    public List<com.tvlk.karate.db.tables.pojos.Order> fetchByProductType(ProductType... values) {
        return fetch(Order.ORDER.PRODUCT_TYPE, values);
    }

    /**
     * Fetch records that have <code>product_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.tvlk.karate.db.tables.pojos.Order> fetchRangeOfProductName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Order.ORDER.PRODUCT_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>product_name IN (values)</code>
     */
    public List<com.tvlk.karate.db.tables.pojos.Order> fetchByProductName(String... values) {
        return fetch(Order.ORDER.PRODUCT_NAME, values);
    }

    /**
     * Fetch records that have <code>product_desc BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.tvlk.karate.db.tables.pojos.Order> fetchRangeOfProductDesc(String lowerInclusive, String upperInclusive) {
        return fetchRange(Order.ORDER.PRODUCT_DESC, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>product_desc IN (values)</code>
     */
    public List<com.tvlk.karate.db.tables.pojos.Order> fetchByProductDesc(String... values) {
        return fetch(Order.ORDER.PRODUCT_DESC, values);
    }

    /**
     * Fetch records that have <code>payment_status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.tvlk.karate.db.tables.pojos.Order> fetchRangeOfPaymentStatus(PaymentStatus lowerInclusive, PaymentStatus upperInclusive) {
        return fetchRange(Order.ORDER.PAYMENT_STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_status IN (values)</code>
     */
    public List<com.tvlk.karate.db.tables.pojos.Order> fetchByPaymentStatus(PaymentStatus... values) {
        return fetch(Order.ORDER.PAYMENT_STATUS, values);
    }

    /**
     * Fetch records that have <code>payment_option BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.tvlk.karate.db.tables.pojos.Order> fetchRangeOfPaymentOption(PaymentOption lowerInclusive, PaymentOption upperInclusive) {
        return fetchRange(Order.ORDER.PAYMENT_OPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_option IN (values)</code>
     */
    public List<com.tvlk.karate.db.tables.pojos.Order> fetchByPaymentOption(PaymentOption... values) {
        return fetch(Order.ORDER.PAYMENT_OPTION, values);
    }

    /**
     * Fetch records that have <code>created BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.tvlk.karate.db.tables.pojos.Order> fetchRangeOfCreated(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(Order.ORDER.CREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<com.tvlk.karate.db.tables.pojos.Order> fetchByCreated(OffsetDateTime... values) {
        return fetch(Order.ORDER.CREATED, values);
    }

    /**
     * Fetch records that have <code>updated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.tvlk.karate.db.tables.pojos.Order> fetchRangeOfUpdated(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(Order.ORDER.UPDATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated IN (values)</code>
     */
    public List<com.tvlk.karate.db.tables.pojos.Order> fetchByUpdated(OffsetDateTime... values) {
        return fetch(Order.ORDER.UPDATED, values);
    }
}
